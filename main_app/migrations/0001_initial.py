# Generated by Django 5.2.7 on 2025-10-03 05:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import main_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('website', models.URLField(blank=True)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('size', models.CharField(blank=True, choices=[('startup', '1-10 employees'), ('small', '11-50 employees'), ('medium', '51-200 employees'), ('large', '201-1000 employees'), ('enterprise', '1000+ employees')], max_length=20)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('degree_type', models.CharField(choices=[('Bachelor', "Bachelor's Degree"), ('Master', "Master's Degree"), ('PhD', 'Doctorate'), ('Diploma', 'Diploma'), ('Certificate', 'Certificate')], max_length=20)),
                ('duration_years', models.IntegerField(default=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Degree Program',
                'verbose_name_plural': 'egree Programs ',
                'ordering': ['degree_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GraduationYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Completion Year',
                'verbose_name_plural': 'Completion Years',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Alumni Coordinator'), (3, 'Alumni')], default=3, max_length=1)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('address', models.TextField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('fcm_token', models.TextField(blank=True, default='')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False, help_text='Whether the account is suspended')),
                ('suspension_reason', models.TextField(blank=True, help_text='Reason for suspension', null=True)),
                ('suspended_at', models.DateTimeField(blank=True, help_text='When the account was suspended', null=True)),
                ('suspension_expires_at', models.DateTimeField(blank=True, help_text='When the suspension expires (null for permanent)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('suspended_by', models.ForeignKey(blank=True, help_text='Admin who suspended this account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suspended_users', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', main_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Administrator',
                'verbose_name_plural': 'System Administrators',
            },
        ),
        migrations.CreateModel(
            name='Alumni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, editable=False, max_length=20, unique=True)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('employment_status', models.CharField(choices=[('employed', 'Employed'), ('unemployed', 'Unemployed'), ('self_employed', 'Self-Employed'), ('student', 'Student'), ('retired', 'Retired')], default='employed', max_length=20)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('linkedin_profile', models.URLField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('current_city', models.CharField(blank=True, max_length=100)),
                ('current_country', models.CharField(blank=True, max_length=100)),
                ('bio', models.TextField(blank=True, help_text='Brief professional/personal bio')),
                ('achievements', models.TextField(blank=True, help_text='Notable achievements and awards')),
                ('skills', models.TextField(blank=True, help_text='Professional skills (comma-separated)')),
                ('privacy_level', models.CharField(choices=[('public', 'Public - Visible to all alumni'), ('limited', 'Limited - Visible to verified alumni only'), ('private', 'Private - Only basic info visible')], default='limited', max_length=20)),
                ('allow_contact', models.BooleanField(default=True)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('is_mentor', models.BooleanField(default=False)),
                ('is_job_seeker', models.BooleanField(default=False)),
                ('willing_to_hire', models.BooleanField(default=False)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('current_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.company')),
                ('degree', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.degree')),
                ('graduation_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.graduationyear')),
            ],
            options={
                'verbose_name': 'Alumni',
                'verbose_name_plural': 'Alumni',
                'ordering': ['-graduation_year__year', 'admin__last_name'],
            },
        ),
        migrations.CreateModel(
            name='AlumniCoordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alumni Coordinator',
                'verbose_name_plural': 'COSA Coordinators',
            },
        ),
        migrations.CreateModel(
            name='AlumniGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('group_type', models.CharField(choices=[('graduation_year', 'Completion Year'), ('department', 'Department'), ('location', 'Location-based'), ('industry', 'Industry'), ('interest', 'Interest-based')], max_length=20)),
                ('is_public', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('group_image', models.ImageField(blank=True, null=True, upload_to='group_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administered_groups', to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Alumni Group',
                'verbose_name_plural': 'Alumni Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('news', 'News'), ('job', 'Job'), ('event', 'Event')], max_length=10)),
                ('object_id', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('depth', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='main_app.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='degree',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.department'),
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('donation_type', models.CharField(choices=[('general', 'General Fund'), ('scholarship', 'Scholarship Fund'), ('infrastructure', 'Infrastructure'), ('research', 'Research Fund'), ('emergency', 'Emergency Fund'), ('other', 'Other')], max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('public_message', models.TextField(blank=True)),
                ('campaign', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('reunion', 'Alumni Reunion'), ('networking', 'Networking Event'), ('seminar', 'Seminar/Workshop'), ('social', 'Social Gathering'), ('fundraising', 'Fundraising Event'), ('career', 'Career Fair'), ('webinar', 'Webinar'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('is_virtual', models.BooleanField(default=False)),
                ('venue', models.CharField(blank=True, max_length=200)),
                ('address', models.TextField(blank=True)),
                ('virtual_link', models.URLField(blank=True)),
                ('max_attendees', models.IntegerField(blank=True, null=True)),
                ('registration_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('requires_approval', models.BooleanField(default=False)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumnicoordinator')),
                ('target_graduation_years', models.ManyToManyField(blank=True, to='main_app.graduationyear')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackAlumni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('general', 'General Feedback'), ('technical', 'Technical Issue'), ('feature_request', 'Feature Request'), ('complaint', 'Complaint'), ('suggestion', 'Suggestion')], default='general', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('feedback', models.TextField()),
                ('reply', models.TextField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alumni', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Alumni Feedback',
                'verbose_name_plural': 'Alumni Feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumnigroup')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Group Membership',
                'verbose_name_plural': 'Group Memberships',
                'ordering': ['-joined_date'],
                'unique_together': {('group', 'member')},
            },
        ),
        migrations.AddField(
            model_name='alumnigroup',
            name='members',
            field=models.ManyToManyField(related_name='groups', through='main_app.GroupMembership', to='main_app.alumni'),
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True, null=True)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('freelance', 'Freelance')], max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level (0-2 years)'), ('mid', 'Mid Level (3-5 years)'), ('senior', 'Senior Level (6-10 years)'), ('executive', 'Executive Level (10+ years)')], default='mid', max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('is_remote', models.BooleanField(default=False)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('application_email', models.EmailField(blank=True, max_length=254)),
                ('application_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.company')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Job Posting',
                'verbose_name_plural': 'Job Postings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MentorshipProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('focus_area', models.CharField(max_length=100)),
                ('goals', models.TextField()),
                ('duration_months', models.IntegerField(default=6)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mentor_feedback', models.TextField(blank=True)),
                ('mentee_feedback', models.TextField(blank=True)),
                ('coordinator_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentee_programs', to='main_app.alumni')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_programs', to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Mentorship Program',
                'verbose_name_plural': 'Mentorship Programs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('alumni', 'Alumni'), ('admin', 'Admin'), ('coordinator', 'Coordinator')], default='alumni', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read')], default='sent', max_length=20)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='message_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='main_app.alumni')),
                ('sender_admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='main_app.admin')),
                ('sender_alumni', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='main_app.alumni')),
                ('sender_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='main_app.alumnicoordinator')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General News'), ('alumni_spotlight', 'Alumni Spotlight'), ('achievements', 'Achievements'), ('events', 'Events'), ('careers', 'Career News'), ('institution', 'Institution Updates')], default='general', max_length=20)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='news_images/')),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumnicoordinator')),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationAlumni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('event', 'Event Notification'), ('job', 'Job Posting'), ('message', 'New Message'), ('news', 'News Update'), ('system', 'System Notification')], default='system', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('link_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('alumni', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
            ],
            options={
                'verbose_name': 'Alumni Notification',
                'verbose_name_plural': 'Alumni Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationCoordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumnicoordinator')),
            ],
            options={
                'verbose_name': 'Coordinator Notification',
                'verbose_name_plural': 'Coordinator Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='main_app.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('waitlist', 'Waitlist')], default='pending', max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('special_requirements', models.TextField(blank=True)),
                ('alumni', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.event')),
            ],
            options={
                'verbose_name': 'Event Registration',
                'verbose_name_plural': 'Event Registrations',
                'ordering': ['-registration_date'],
                'unique_together': {('event', 'alumni')},
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('reviewed', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interviewed', 'Interviewed'), ('offered', 'Offered'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20)),
                ('cover_letter', models.TextField(blank=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.alumni')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.jobposting')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-application_date'],
                'unique_together': {('job', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('news', 'News'), ('job', 'Job'), ('event', 'Event')], max_length=10)),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
    ]
